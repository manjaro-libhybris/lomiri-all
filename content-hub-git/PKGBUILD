# Maintainer: Bardia Moshiri <fakeshell@bardia.tech>

pkgname=content-hub-git
_pkgname=content-hub
pkgver=r1394.1.0.2
pkgrel=1
epoch=1
pkgdesc='Content sharing/picking infrastructure and service'
url='https://gitlab.com/ubports/development/core/content-hub'
arch=(x86_64 i686 armv7h aarch64)
license=(LGPL3)
conflicts=(content-hub)
provides=(content-hub)
depends=(lcov gcovr gtest-lomiri lomiri-app-launch-git lomiri-download-manager-git gsettings-qt apparmor libnotify lomiri-ui-toolkit-git)
makedepends=(git cmake cmake-extras-lomiri doxygen graphviz qt5-tools)
checkdepends=(xorg-server-xvfb)
source=('git+https://gitlab.com/ubports/development/core/content-hub'
        'QtArg.patch')
sha256sums=('SKIP'
            'ab4a52fca78b58365fbb55c2c1190371fe0e07c6bb2c92530d870bc5ebe49a13')
BUILDENV+=('!check')

pkgver() {
  cd ${_pkgname}
  echo "r$(git rev-list --count HEAD).$(git describe --always)" | cut -d "-" -f1
}

prepare() {
    cd ${_pkgname}
    local src
    for src in "${source[@]}"; do
      src="${src%%::*}"
      src="${src##*/}"
      [[ $src = *.patch ]] || continue
      echo "Applying patch $src..."
      patch -Np1 < "../$src"
    done
}

build() {
  cd ${_pkgname}
  mkdir -p /tmp/runtime-builduser
  cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_INSTALL_LIBDIR="lib/" -DCMAKE_INSTALL_LIBEXECDIR="lib/" -DENABLE_TESTS=off .
  XDG_RUNTIME_DIR=/tmp/runtime-builduser make
}

package() {
  cd ${_pkgname}
  make DESTDIR="${pkgdir}/" install
  mv ${pkgdir}/usr/lib/qt5/ ${pkgdir}/usr/lib/qt/
}
# vim:set ts=2 sw=2 et:
